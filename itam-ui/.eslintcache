[{"C:\\Users\\Anushka\\PycharmProjects\\asset\\p2p\\itam-ui\\src\\index.tsx":"1","C:\\Users\\Anushka\\PycharmProjects\\asset\\p2p\\itam-ui\\src\\Layouts\\Admin.tsx":"2","C:\\Users\\Anushka\\PycharmProjects\\asset\\p2p\\itam-ui\\src\\Layouts\\Auth.tsx":"3","C:\\Users\\Anushka\\PycharmProjects\\asset\\p2p\\itam-ui\\src\\Routes.ts":"4","C:\\Users\\Anushka\\PycharmProjects\\asset\\p2p\\itam-ui\\src\\Components\\Header\\AdminHeader.tsx":"5","C:\\Users\\Anushka\\PycharmProjects\\asset\\p2p\\itam-ui\\src\\Components\\Footer\\AdminFooter.tsx":"6","C:\\Users\\Anushka\\PycharmProjects\\asset\\p2p\\itam-ui\\src\\Components\\Sidebar\\Sidebar.tsx":"7","C:\\Users\\Anushka\\PycharmProjects\\asset\\p2p\\itam-ui\\src\\Views\\About.tsx":"8","C:\\Users\\Anushka\\PycharmProjects\\asset\\p2p\\itam-ui\\src\\Views\\Pages\\Page403.tsx":"9","C:\\Users\\Anushka\\PycharmProjects\\asset\\p2p\\itam-ui\\src\\Views\\Dashboard.tsx":"10","C:\\Users\\Anushka\\PycharmProjects\\asset\\p2p\\itam-ui\\src\\Views\\Pages\\Page404.tsx":"11","C:\\Users\\Anushka\\PycharmProjects\\asset\\p2p\\itam-ui\\src\\Views\\Pages\\BlankPage.tsx":"12","C:\\Users\\Anushka\\PycharmProjects\\asset\\p2p\\itam-ui\\src\\Views\\Pages\\Page500.tsx":"13","C:\\Users\\Anushka\\PycharmProjects\\asset\\p2p\\itam-ui\\src\\Views\\Pages\\Login.tsx":"14","C:\\Users\\Anushka\\PycharmProjects\\asset\\p2p\\itam-ui\\src\\Views\\Pages\\register.tsx":"15"},{"size":597,"mtime":1626774852686,"results":"16","hashOfConfig":"17"},{"size":3557,"mtime":1626774852774,"results":"18","hashOfConfig":"17"},{"size":1145,"mtime":1626774852783,"results":"19","hashOfConfig":"17"},{"size":3307,"mtime":1626798060716,"results":"20","hashOfConfig":"17"},{"size":535,"mtime":1626774852742,"results":"21","hashOfConfig":"17"},{"size":377,"mtime":1626774852726,"results":"22","hashOfConfig":"17"},{"size":2163,"mtime":1626774852758,"results":"23","hashOfConfig":"17"},{"size":6975,"mtime":1626774852798,"results":"24","hashOfConfig":"17"},{"size":498,"mtime":1626774852844,"results":"25","hashOfConfig":"17"},{"size":6087,"mtime":1626774852808,"results":"26","hashOfConfig":"17"},{"size":489,"mtime":1626774852854,"results":"27","hashOfConfig":"17"},{"size":180,"mtime":1626774852825,"results":"28","hashOfConfig":"17"},{"size":470,"mtime":1626774852863,"results":"29","hashOfConfig":"17"},{"size":2229,"mtime":1626874658163,"results":"30","hashOfConfig":"17"},{"size":3614,"mtime":1626889318045,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1h4jgzc",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},"C:\\Users\\Anushka\\PycharmProjects\\asset\\p2p\\itam-ui\\src\\index.tsx",[],"C:\\Users\\Anushka\\PycharmProjects\\asset\\p2p\\itam-ui\\src\\Layouts\\Admin.tsx",[],"C:\\Users\\Anushka\\PycharmProjects\\asset\\p2p\\itam-ui\\src\\Layouts\\Auth.tsx",[],"C:\\Users\\Anushka\\PycharmProjects\\asset\\p2p\\itam-ui\\src\\Routes.ts",[],"C:\\Users\\Anushka\\PycharmProjects\\asset\\p2p\\itam-ui\\src\\Components\\Header\\AdminHeader.tsx",[],"C:\\Users\\Anushka\\PycharmProjects\\asset\\p2p\\itam-ui\\src\\Components\\Footer\\AdminFooter.tsx",[],"C:\\Users\\Anushka\\PycharmProjects\\asset\\p2p\\itam-ui\\src\\Components\\Sidebar\\Sidebar.tsx",[],"C:\\Users\\Anushka\\PycharmProjects\\asset\\p2p\\itam-ui\\src\\Views\\About.tsx",[],"C:\\Users\\Anushka\\PycharmProjects\\asset\\p2p\\itam-ui\\src\\Views\\Pages\\Page403.tsx",[],"C:\\Users\\Anushka\\PycharmProjects\\asset\\p2p\\itam-ui\\src\\Views\\Dashboard.tsx",["64","65"],"import React from 'react'\nimport moment from \"moment\";\nimport { \n    Card, \n    Col, \n    Row ,\n    Statistic,\n    Typography,\n    Tabs,\n    Comment,\n    Avatar,\n    List\n} from 'antd';\nimport {\n    FolderTwoTone,\n    SmileTwoTone,\n    CalendarTwoTone,\n    BugTwoTone,\n} from \"@ant-design/icons\"\n\nconst { TabPane } = Tabs;\nconst { Title, Text, Link } = Typography;\n\ninterface TabData {\n    id: number;\n    userId: number;\n    username: string;\n    context: string;\n    avatar: string;\n    datetime: string | moment.Moment;\n}\n\n\nconst ListItem = (props: { messages: TabData[]}) => (\n    <List\n        className=\"commits-list\"\n        itemLayout=\"horizontal\"\n        dataSource={props.messages}\n        renderItem={message => (\n            <li>\n                <Comment\n                    author={<span>{message.username}</span>}\n                    avatar={<Avatar src={message.avatar} alt={message.username} />}\n                    content={<p>{message.context}</p>}\n                    datetime={<span>{moment(message.datetime, \"YYYY-MM-DD HH:mm:ss\").fromNow()}</span>}\n                />\n            </li>\n        )}\n    />\n)\nexport default function Dashboard() {\n    const messages:TabData[] = [\n        {\n            id: 1,\n            userId: 2,\n            username: \"Mary Antala\",\n            context: \"Add New Dashboard\",\n            datetime: moment().subtract(\"hour\", 2).format(\"YYYY-MM-DD HH:mm:ss\"),\n            avatar: \"https://s1.zerochan.net/Mary.%28Ib%29.600.1225865.jpg\"\n        },\n        {\n            id: 2,\n            userId: 4,\n            username: \"Shyna\",\n            context: \"Make Some Changes in Notification\",\n            datetime: moment().subtract(\"hour\", 2.4).format(\"YYYY-MM-DD HH:mm:ss\"),\n            avatar: \"https://i.pravatar.cc/150?img=47\"\n        },\n        {\n            id: 3,\n            userId: 5,\n            username: \"Anotonia Verz\",\n            context: \"Table Changes\",\n            datetime: moment().subtract(\"hour\", 3).format(\"YYYY-MM-DD HH:mm:ss\"),\n            avatar: \"https://i.pravatar.cc/150?img=51\"\n        },\n        {\n            id: 4,\n            userId: 3,\n            username: \"Tom\",\n            context: \"Make Dummy Data\",\n            datetime: moment().subtract(\"hour\", 3).format(\"YYYY-MM-DD HH:mm:ss\"),\n            avatar: \"https://i.pravatar.cc/150?img=50\"\n        },\n        {\n            id: 5,\n            userId: 4,\n            username: \"Mia\",\n            context: \"Setup Server\",\n            datetime: moment().subtract(\"hour\", 4).format(\"YYYY-MM-DD HH:mm:ss\"),\n            avatar: \"https://i.pravatar.cc/150?img=40\"\n        },\n    ];\n    const chartData = {\n        labels: ['Mon', 'Tues', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun'],\n        datasets: [\n            {\n                label: 'Total Commits',\n                data: [35, 65, 33, 21, 57, 43, 13],\n                backgroundColor: [\n                    'rgba(255, 99, 132, 0.2)',\n                    'rgba(54, 162, 235, 0.2)',\n                    'rgba(255, 206, 86, 0.2)',\n                    'rgba(75, 192, 192, 0.2)',\n                    'rgba(153, 102, 255, 0.2)',\n                    'rgba(255, 159, 64, 0.2)',\n                    'rgba(153, 102, 255, 0.2)',\n                ],\n                borderColor: [\n                    'rgba(255, 99, 132, 1)',\n                    'rgba(54, 162, 235, 1)',\n                    'rgba(255, 206, 86, 1)',\n                    'rgba(75, 192, 192, 1)',\n                    'rgba(153, 102, 255, 1)',\n                    'rgba(255, 159, 64, 1)',\n                    'rgba(153, 102, 255, 1)',\n                ],\n                borderWidth: 1,\n            },\n        ],\n    }\n    return (\n        <Row gutter={[16, 16]}>\n            <Col span={24}>\n                <Card bordered>\n                    <Title level={3}>Asset Management Tool</Title>\n                    <Text>This tool provides a wholesome solution to manage lifecycles of your assets in a automated way.</Text>\n                </Card>\n            </Col>\n            <Col xs={24} sm={24} md={6}>\n                <Card bordered>\n                    <Statistic title=\"Projects\" value={23} prefix={<FolderTwoTone twoToneColor=\"#F63E4F\" />} />\n                </Card>\n            </Col>\n            <Col xs={24} sm={24} md={6}>\n                <Card bordered>\n                    <Statistic title=\"Developers\" value={57} prefix={<SmileTwoTone twoToneColor=\"#27C7FF\" />} />\n                </Card>\n            </Col>\n            <Col xs={24} sm={24} md={6}>\n                <Card bordered>\n                    <Statistic title=\"Meeeting\" value={17} prefix={<CalendarTwoTone twoToneColor=\"#F63848\" />} />\n                </Card>\n            </Col>\n            <Col xs={24} sm={24} md={6}>\n                <Card bordered>\n                    <Statistic title=\"Bug Fixed\" value={87} prefix={<BugTwoTone twoToneColor=\"#117EFF\" />} suffix={`/ 209`} />\n                </Card>\n            </Col>\n            <Col xs={24} sm={24} md={24}>\n                <Row gutter={[16, 16]}>\n                    <Col xs={24} sm={24} md={12}>\n                        <Card bordered >\n                            <div style={{ minHeight: \"400px\" }}>\n\n                            </div>\n                        </Card>\n                    </Col>\n                    <Col xs={24} sm={24} md={12}>\n                        <Card bordered>\n                            <Tabs defaultActiveKey=\"1\">\n                                <TabPane tab=\"Commits\" key=\"1\">\n                                    <ListItem messages={messages} />\n                                </TabPane>\n                                <TabPane tab=\"Meeting\" key=\"2\">\n                                    <ListItem messages={messages} />\n                                </TabPane>\n                                <TabPane tab=\"Bug Fixed\" key=\"3\">\n                                    <ListItem messages={messages} />\n                                </TabPane>\n                            </Tabs>\n                        </Card>\n                    </Col>\n                </Row>\n            </Col>\n        </Row>\n    )\n}\n","C:\\Users\\Anushka\\PycharmProjects\\asset\\p2p\\itam-ui\\src\\Views\\Pages\\Page404.tsx",[],"C:\\Users\\Anushka\\PycharmProjects\\asset\\p2p\\itam-ui\\src\\Views\\Pages\\BlankPage.tsx",[],"C:\\Users\\Anushka\\PycharmProjects\\asset\\p2p\\itam-ui\\src\\Views\\Pages\\Page500.tsx",[],"C:\\Users\\Anushka\\PycharmProjects\\asset\\p2p\\itam-ui\\src\\Views\\Pages\\Login.tsx",[],"C:\\Users\\Anushka\\PycharmProjects\\asset\\p2p\\itam-ui\\src\\Views\\Pages\\register.tsx",["66","67"],"import React from 'react'\r\nimport { Form, Input, Button, Checkbox, Card, Image } from 'antd';\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\r\nimport {Link} from \"react-router-dom\"\r\nimport Logo from \"../../assets/antd.png\"\r\nimport axios from 'axios';\r\n\r\nexport default function register() {\r\n\r\n    async function onFinish(values: any)  {\r\n        const response = await axios.post(\"http://127.0.0.1:5000/register\", values)\r\n        console.log(response)\r\n    }\r\n\r\n    return (\r\n        <Card id=\"auth-card\">\r\n            <Image\r\n                className=\"mb3 mt2\"\r\n                width={100}\r\n                src={Logo}\r\n                preview={false}\r\n            />\r\n            <Form\r\n                name=\"normal_login\"\r\n                className=\"auth-form\"\r\n                initialValues={{ remember: true }}\r\n                onFinish={(values) => onFinish(values)}\r\n\r\n            >\r\n\r\n                <Form.Item\r\n                    name=\"email\"\r\n                    rules={[{ required: true, message: 'This is a required field' }]}\r\n                >\r\n                    <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Email\" />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name=\"Firstname\"\r\n                    rules={[{ required: true, message: 'This is a required field' }]}\r\n                >\r\n                    <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"First Name\" />\r\n                </Form.Item>\r\n                 <Form.Item\r\n                    name=\"Lastname\"\r\n                    rules={[{ required: true, message: 'This is a required field' }]}\r\n                >\r\n                    <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Last Name\" />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    name=\"username\"\r\n                    rules={[{ required: true, message: 'This is a required field' }]}\r\n                >\r\n                    <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Username\" />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    name=\"Organisation\"\r\n                    rules={[{ required: true, message: 'This is a required field' }]}\r\n                >\r\n                    <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Organisation\" />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    name=\"password\"\r\n                    rules={[{ required: true, message: 'This is a required field' }]}\r\n                >\r\n                    <Input\r\n                        prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                        type=\"password\"\r\n                        placeholder=\"Password\"\r\n                    />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name=\"rpassword\"\r\n                    rules={[{ required: true, message: 'This is a required field' }]}\r\n                >\r\n                    <Input\r\n                        prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                        type=\"password\"\r\n                        placeholder=\"Re-enter password\"\r\n                    />\r\n                </Form.Item>\r\n\r\n                <Form.Item>\r\n                    <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                        Sign Up\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </Card>\r\n    )\r\n}",{"ruleId":"68","severity":1,"message":"69","line":22,"column":22,"nodeType":"70","messageId":"71","endLine":22,"endColumn":26},{"ruleId":"68","severity":1,"message":"72","line":94,"column":11,"nodeType":"70","messageId":"71","endLine":94,"endColumn":20},{"ruleId":"68","severity":1,"message":"73","line":2,"column":31,"nodeType":"70","messageId":"71","endLine":2,"endColumn":39},{"ruleId":"68","severity":1,"message":"74","line":4,"column":9,"nodeType":"70","messageId":"71","endLine":4,"endColumn":13},"@typescript-eslint/no-unused-vars","'Link' is assigned a value but never used.","Identifier","unusedVar","'chartData' is assigned a value but never used.","'Checkbox' is defined but never used.","'Link' is defined but never used."]